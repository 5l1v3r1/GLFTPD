<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <title>2008_MVsources.nfo</title>
    <style type="text/css">
        @font-face {
            font-family: nfo;
            font-style:  normal;
            font-weight: normal;
            src: url(/nfo.eot);
        }
        .nfo {
            padding: 12px;
            font-family: nfo, courier new;
            font-size: 11px;
            line-height: 1em;
        }
    </style>
</head>
<body>
    <pre class="nfo">Music Video Sources 1.0 (October 4, 2008)
-----------------------------------------

Why a scene for the sources ?

 - After years trying to stop the source re-compression in the mv scene,
we have decided to start a new independent section in the scene, where what
matters is the quality.

 - In the past, source re-compression could have been justified due to
slow connections and lower storage space, but not today.

 - The main target of this section, is to release the sources with the highest as possible 
quality while trying to release only the performances from the best artists.

 - With these intentions, we intend to save storage space by releasing only the
most important artists freeing the users from the pain of looking for sources outside the scene, 
or asking the rippers in private.


1.1 - Containers

- Allowed containers are: MPEG/TS/VOB


1.2 - Audio

- No recompression for the audio tracks is allowed.
- You can keep all the audio tracks of the source.
- Or you can keep just the best track (rippers decission).
- You can do audio replacement if you keep the original audio tracks too.
- Audio must be synced.
- Allowed audio formats: MP2/AC3/LPCM.


1.3 - Video Formats

- No recompression is allowed.
- Video source must be DVB.
- Allowed formats: MPEG-2/H264.


1.4 - Quality Of The Source And Priority

- This is the most complicated part so we&#39;ll give you just some tips:

+ Ripper can choose the best source for the rip, based on his experience.
+ In general, the higher the bitrate the better is the source.
+ If it possible your source should be fullres.
+ Source with widescreen AR is preferred.
+ Progressive source is preferred.

- In case of dupes using different origins:

+ HD doesn&#39;t proper SD, but SD will be nuked if the HD version
has already been pred before.
+ If you rel SD &#38; HD from the same show, your SD rels
will be nuked. You can only pre the HD version if it&#39;s
broadcasted later than the SD.

+ A FEED won&#39;t proper an existing rel, but a normal rel will be
nuked if the FEED has already been pred before.
+ If you pre normal &#38; feeds rels from the same
show, your normal rels will be nuked. You can only pre the
FEED if it is broadcasted later than the lower quality stream.

+ In general: FEEDHD > HD > FEEDSD > SD

+ You can proper if your source image quality is really higher.
+ This is really subjective, so we can just propose some guidelines:

&#9516;&#9558; For SD, more than 4mbit of difference in bitrate.
&#9516;&#9558; For HD, more than 8mbit of difference in bitrate.


2.1 - Directory &#38; File Namig

- For Directory:

Artist-Title_(Event_Decription)-SOURCE-SD/HD/FEEDSD/FEEDHD-&#60;LANG>-YEAR-GROUP

- For Filenames:

+ Like the Directory, but lower case &#38; with the allowed extensions (mpg, vob, ts).


2.2 - Concerts

- You can release as multiple tracks or as a single big track.
- You can include little interviews.


2.3 - NFO File

- Must include:

+ Artist name &#38; Title.
+ Video &#38; Audio formats with bitrates (estimated).
+ Container Format (MPEG/TS/VOB).
+ Video resolution, FPS &#38; AR.
+ TV Station name (or FEED).
+ Genre.
+ Air date (can be avoided if included in the title).

- Optional:

+ Filesize.
+ Playtime.
+ Ripper&#39;s comments.


3 - Dupes / Propers / Nukes

- Check source origins dupes section (1.4)

- Bad AR is proper nuke.

- A little glitch won&#39;t be a nuke reason, but a lot of glitches then yes.

- Native source is a reason to proper.

- Improper naming could be a reason to nuke.

- Any re-encoded crap is auto-nuked.

- Out of sync audio is a reason to nuke.

- Incomplete or missing audio/video is a reason to nuke.

- Too much spam is a reason to nuke too.</pre>
<!-- Piwik -->
<script type="text/javascript">
  var _paq = _paq || [];
  _paq.push(["setDocumentTitle", document.domain + "/" + document.title]);
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
  (function() {
    var u="//piwik.root.ax/";
    _paq.push(['setTrackerUrl', u+'piwik.php']);
    _paq.push(['setSiteId', 1]);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);
  })();
</script>
<noscript><p><img src="//piwik.root.ax/piwik.php?idsite=1" style="border:0;" alt="" /></p></noscript>
<!-- End Piwik Code -->
</body>
</html>
